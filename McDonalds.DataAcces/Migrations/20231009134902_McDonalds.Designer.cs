// <auto-generated />
using System;
using McDonalds.DataAcces.McDonaldsDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace McDonalds.DataAcces.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231009134902_McDonalds")]
    partial class McDonalds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("McDonalds.Domein.Entity.Menu.Breakfast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("breakfasts");
                });

            modelBuilder.Entity("McDonalds.Domein.Entity.Menu.Desserts_Bakery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("desserts");
                });

            modelBuilder.Entity("McDonalds.Domein.Entity.Menu.Sandwiches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("sandwiches");
                });

            modelBuilder.Entity("McDonalds.Domein.Entity.Users.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("McDonalds.Domein.Entity.Menu.Breakfast", b =>
                {
                    b.HasOne("McDonalds.Domein.Entity.Users.Customer", null)
                        .WithMany("breakfasts")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("McDonalds.Domein.Entity.Menu.Desserts_Bakery", b =>
                {
                    b.HasOne("McDonalds.Domein.Entity.Users.Customer", null)
                        .WithMany("desserts")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("McDonalds.Domein.Entity.Menu.Sandwiches", b =>
                {
                    b.HasOne("McDonalds.Domein.Entity.Users.Customer", null)
                        .WithMany("sandwiches")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("McDonalds.Domein.Entity.Users.Customer", b =>
                {
                    b.Navigation("breakfasts");

                    b.Navigation("desserts");

                    b.Navigation("sandwiches");
                });
#pragma warning restore 612, 618
        }
    }
}
